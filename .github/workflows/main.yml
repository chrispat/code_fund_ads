name: Run Tests & Linters

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports: ['6379:6379']
        options: --entrypoint redis-server
    container:
      image: andrewmcodes/locomotive:v0.0.1
      env:
        DEFAULT_HOST: app.codefund.io
    steps:
    - uses: actions/checkout@v2

    - name: Get Yarn Cache
      id: yarn-cache
      run: echo "::set-output name=dir::$(yarn cache dir)"
    
    - name: Set up assets cache key
      run: |
        find app/javascript -type f | xargs -d'\n' -P0 -n1 md5sum | sort -k 2 | md5sum > dependency_checksum
    
    - run: |
          sudo curl -sL https://deb.nodesource.com/setup_13.x | sudo bash -
          curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
          echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
          sudo apt-get update && sudo apt-get install -y libpq-dev postgresql-client nodejs yarn
        
    - name: Restore gem cache
      id: gem-cache
      uses: actions/cache@master
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-
          
    - name: Restore yarn cache
      id: node-modules-cache
      uses: actions/cache@master
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Cache Assets
      id: assets-cache
      uses: actions/cache@v1
      with:
        path: |
         'public/packs-test'
         'public/assets'
         'tmp/cache/webpacker'
         'tmp/cache/assets/sprockets'
        key: ${{ runner.os }}-assets-${{ hashFiles( 'dependency_checksum' ) }}-${{ github.ref }}
        restore-keys: |
          ${{ runner.os }}-assets-

    - name: Install gem dependencies
      run: |
       gem install bundler:2.1.4
       bundle check || bundle install --jobs=6 --retry=3 --path vendor/bundle
   
    - name: Install yarn dependencies
      run: yarn install --check-files --frozen-lockfile

    - name: Precompile Assets
      shell: bash
      run: bundle exec rails assets:precompile

    - name: Setup DB
      run: bundle exec rails db:drop db:create db:structure:load --trace

    - name: Compile Assets
      shell: bash
      run: bundle exec rails assets:precompile

    - name: Run Rails Tests
      run: |
        bundle exec rails test
        bundle exec rails test:system

    - uses: actions/upload-artifact@v2-preview
      with:
        name: screenshots
        path: tmp/screenshots
      
    - name: StandardRB Check
      run: bundle exec standardrb --format progress

    - name: ERB Lint
      run: bundle exec erblint app/views_redesigned/**/*.html.erb

    - name: Prettier-Standard Check
      run: yarn run --ignore-engines prettier-standard --check 'app/**/*.js'
